	introduction  
	------------
barbar is a minimal status bar aggregator using shared memory for IPC
it reads status updates from user modules and displays them as a combined string
it is WM and OS agnostic, and simply prints out the string to stdout
tested on Unix (OpenBSD, MacOS, and Linux)

barbar's goal is to
- unify status bar updating across multiple devices, wms, bars
- offer a convenient interface, w2s(), for status updates
- minimize overhead (i.e., avoid a zillion shell forks every second)

documentation on each included module is yet to be written, for now:
- pomodoro: timer that can be customised with flags
- bartime: like the date coreutil, customised through its .h file
- ccq_dues: specific to my other project, counts due cards to review
  delete the associated line in meson.build if you don't want to build it
- get_ip: like curl ifconfig.me but tiny
- dailies: to keep track of daily study goals, customised through its .h file
  this one exits, and therefore doesn't need to be run in the background

*do* write your own modules, simply compile with util.c and use w2s


	installation  
	------------
    meson setup builddir
    ninja -C builddir

	notes 
	-----
ensure barbar is running first to aggregate and display status updates
the order, number, and names of modules can be set in config.h
other high-level configuration options, e.g. refresh rate, are in config.h
look at modules/config_MODULE.h for module config, e.g. the date formatting

	examples
	--------
on dwm, use xsetroot
on swaybar and shell-based updaters, redirect the output
    barbar > /tmp/barbar &
then in your status update script tail the file
    tail -n 1 /tmp/barbar

once barbar is running:
    bartime & get_ip & ccq_dues & pomodoro & dailies
